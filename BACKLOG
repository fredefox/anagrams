BACKLOG
====

Evaluate anagrams concurrently
----

Partial anagrams
----
This program currently finds partial anagrams. It should be
configurable if we want to match against partial anagrams or only
exact matches. Also the test-case `prop_anagramInvariant` assumes
exact matches. It would be nice if we could at the same time somehow
refactor `anagramsT` so that it can be made more modular whether we
will include partial sub-matches.

Order of dictionary
----
There seems to be a bug in `buildForest`. The order of the elements in
the dictionary are significant:

    > buildForest ["a", "ab"]
    [Node {rootLabel = ('a',True),  subForest = [Node {rootLabel = ('b',True), subForest = []}]}]
    > buildForest ["ab", "a"]
    [Node {rootLabel = ('a',False), subForest = [Node {rootLabel = ('b',True), subForest = []}]}]
